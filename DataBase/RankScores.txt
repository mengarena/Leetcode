Question: Rank Scores

Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. 
Note that after a tie, the next ranking number should be the next consecutive integer value. 
In other words, there should be no "holes" between ranks.

+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+
For example, given the above Scores table, your query should generate the following report (order by highest score):

+-------+------+
| Score | Rank |
+-------+------+
| 4.00  | 1    |
| 4.00  | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.50  | 4    |
+-------+------+


==Answer:

select Score, Rank from
(select Score,
        case 
            when @number = Score then @rank := @rank
            when (@number := Score) IS NOT NULL then @rank := @rank + 1
        end as Rank
 from Scores, (select @rank := 1, @number := (select Score from Scores order by Score DESC limit 1)) as NumberRank
 order by Score DESC 
) as ScoreRank;


Idea is similar to [Question: Consecutive Numbers]

1) Simplify to:
    select Score, Rank from ScoreRank

2) ScoreRank = 

select Score,
        case 
            when @number = Score then @rank := @rank
            when (@number := Score) IS NOT NULL then @rank := @rank + 1
        end as Rank
from Scores, (select @rank := 1, @number := (select Score from Scores order by Score DESC limit 1)) as NumberRank
order by Score DESC

(simplify by { select Score, Rank from Scores, NumberRank order by Score DESC }

select @rank := 1, @number := (select Score from Scores order by Score DESC limit 1) --> Initialize the two variable

The two case whens, one is for keeping current rank (if score does not change; the other increase rank)